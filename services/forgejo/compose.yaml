# Create a secret with:
#
#   openssl rand -hex 20
#
# NOTE: a token obtained from the Forgejo web interface cannot be used
#       as a shared secret.

networks:
  forgejo-net:
    driver: bridge
    # required to prevent name mangling
    name: forgejo-net
  cloudflared:
    external: true
  traefik-proxy:
    external: true

services:
  socket-proxy:
    image: lscr.io/linuxserver/socket-proxy:latest
    container_name: forgejo-docksock
    environment:
      CONTAINERS: 1
      EXEC: 1
      POST: 1
      IMAGES: 1
      INFO: 1
      NETWORKS: 1
      VOLUMES: 1
      TZ: ${TZ:-Etc/UTC}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - forgejo-net
    restart: unless-stopped
    read_only: true
    tmpfs:
      - /run

  forgejo-server:
    image: codeberg.org/forgejo/forgejo:12
    container_name: forgejo-server
    hostname: forgejo-server
    restart: unless-stopped
    healthcheck:
      test: curl -fSs 127.0.0.1:3000/api/healthz
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 200s
      start_interval: 5s
    environment:
      USER_UID: ${GIT_UID:?GIT_UID is not set to git user ID}
      USER_GID: ${GIT_GID:?GIT_GID is not set to git group ID}

      FORGEJO__security__INSTALL_LOCK: true
      # create new repos on push
      FORGEJO__repository__ENABLE_PUSH_CREATE_USER: true
      FORGEJO__repository__DEFAULT_PUSH_CREATE_PRIVATE: false
      FORGEJO__repository_signing__DEFAULT_TRUST_MODEL: committer

      FORGEJO__database__DB_TYPE: sqlite3
      FORGEJO__database__SQLITE_JOURNAL_MODE: WAL
      # WARN: db path is inside container
      FORGEJO__database__PATH: /data/forgejo.db
      FORGEJO__openid___ENABLE_OPENID_SIGNIN: false
      FORGEJO__service__DISABLE_REGISTRATION: true
      FORGEJO__service__REQUIRE_SIGNIN_VIEW: false
      FORGEJO__ui__SHOW_USER_EMAIL: false

      # required for SSH cloning to work
      FORGEJO__server__SSH_DOMAIN: forgejo-ssh.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}
      FORGEJO__server__ROOT_URL: https://forgejo.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}
    labels:
      traefik.enable: true
      traefik.docker.network: traefik-proxy
      traefik.http.routers.forgejo.entrypoints: http
      traefik.http.routers.forgejo.rule: Host(`forgejo.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}`)
      traefik.http.middlewares.forgejo-https-redirect.redirectscheme.scheme: https
      traefik.http.routers.forgejo.middlewares: forgejo-https-redirect
      traefik.http.routers.forgejo-secure.entrypoints: https
      traefik.http.routers.forgejo-secure.rule: Host(`forgejo.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}`)
      traefik.http.routers.forgejo-secure.tls: true
      traefik.http.routers.forgejo-secure.tls.certresolver: cloudflare
      traefik.http.routers.forgejo-secure.service: forgejo
      traefik.http.services.forgejo.loadbalancer.server.port: 3000
    ports:
      - "127.0.0.1:2221:22"
    networks:
      # for actions
      - forgejo-net
      # for ssh
      - cloudflared
      # for https
      - traefik-proxy
    volumes:
      - ${FORGEJO_DATA_PATH:?FORGEJO_DATA_PATH not set}:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

  forgejo-server-register:
    image: codeberg.org/forgejo/forgejo:12
    user: 0:0
    privileged: true
    networks:
      - forgejo-net
    depends_on:
      forgejo-server:
        condition: service_healthy
    environment:
      USER_UID: ${GIT_UID:?GIT_UID is not set to git user ID}
      USER_GID: ${GIT_GID:?GIT_GID is not set to git group ID}

      FORGEJO__security__INSTALL_LOCK: true
    volumes:
      - ${FORGEJO_DATA_PATH:?FORGEJO_DATA_PATH not set}:/data
    command: >-
      bash -c 'su -c "forgejo forgejo-cli actions register --secret ${SHARED_SECRET}" git'

  forgejo-runner-register:
    image: code.forgejo.org/forgejo/runner:7.0.0
    depends_on:
      forgejo-server-register:
        condition: service_completed_successfully
        restart: true
    networks:
      - forgejo-net
    volumes:
      - ./register-forgejo-runner.sh:/register-forgejo-runner.sh
      - ${FORGEJO_RUNNER_PATH:?FORGEJO_RUNNER_PATH is not set}:/data
    user: 0:0
    # WARN: required for register script to work
    env_file: .env
    privileged: true
    command: >-
      bash /register-forgejo-runner.sh

  forgejo-runner-daemon:
    container_name: forgejo-runner
    image: code.forgejo.org/forgejo/runner:7.0.0
    user: ${RUNNER_UID:?RUNNER_UID is not set}:${RUNNER_GID:?DOCKER_GID is not set}
    restart: unless-stopped
    depends_on:
      forgejo-runner-register:
        condition: service_completed_successfully
        restart: true
    networks:
      - forgejo-net
    environment:
      DOCKER_HOST: ${DOCKER_HOST:?DOCKER_HOST is not defined}
    volumes:
      - ${FORGEJO_RUNNER_PATH:?FORGEJO_RUNNER_PATH is not set}:/data
    # TODO: figure out why this is necessary on v7 and not v6
    command: >-
      /bin/sh -c 'sleep 5; forgejo-runner --config config.yml daemon'
