# NOTE: this file does not work in Portainer.
# It keeps complaining about "Top-level object must be mapping"
# but the same file copy-pasted into the web editor works with no
# issue. Just run this manually.

networks:
  searxng:
    driver: bridge
  traefik-proxy:
    external: true

volumes:
  valkey-data2: {}

services:
  redis:
    container_name: redis
    image: docker.io/valkey/valkey:8-alpine
    command: valkey-server --save 30 1 --loglevel warning
    restart: unless-stopped
    networks:
      - searxng
    volumes:
      - valkey-data2:/data
    logging:
      driver: 'json-file'
      options:
        max-size: '1m'
        max-file: '1'

  searxng:
    container_name: searxng
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    networks:
      - traefik-proxy
      - searxng
    volumes:
      - ./config:/etc/searxng:rw
    labels:
      traefik.enable: true
      traefik.docker.network: traefik-proxy
      traefik.http.routers.searxng.entrypoints: http
      traefik.http.routers.searxng.rule: Host(`searxng.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}`)
      traefik.http.middlewares.searxng-https-redirect.redirectscheme.scheme: https
      traefik.http.routers.searxng.middlewares: searxng-https-redirect
      traefik.http.routers.searxng-secure.entrypoints: https
      traefik.http.routers.searxng-secure.rule: Host(`searxng.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}`)
      traefik.http.routers.searxng-secure.tls: true
      traefik.http.routers.searxng-secure.tls.certresolver: cloudflare
      traefik.http.routers.searxng-secure.service: searxng
      traefik.http.services.searxng.loadbalancer.server.port: 8080
    environment:
      - SEARXNG_BASE_URL=https://searxng.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}/
      - SEARXNG_SECRET=${SEARXNG_SECRET:?SEARXNG_SECRET is not set, create one with 'openssl rand -hex 32'}
      - UWSGI_WORKERS=${SEARXNG_UWSGI_WORKERS:-4}
      - UWSGI_THREADS=${SEARXNG_UWSGI_THREADS:-4}
    logging:
      driver: 'json-file'
      options:
        max-size: '1m'
        max-file: '1'
