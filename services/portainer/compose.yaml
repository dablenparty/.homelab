networks:
  traefik-proxy:
    external: true

services:
  portainer:
    container_name: portainer
    hostname: portainer
    image: portainer/portainer-ce:latest
    labels:
      traefik.enable: true
      traefik.docker.network: traefik-proxy
      traefik.http.routers.portainer.entrypoints: http
      traefik.http.routers.portainer.rule: Host(`portainer.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}`)
      traefik.http.middlewares.portainer-https-redirect.redirectscheme.scheme: https
      traefik.http.routers.portainer.middlewares: portainer-https-redirect
      traefik.http.routers.portainer-secure.entrypoints: https
      traefik.http.routers.portainer-secure.rule: Host(`portainer.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}`)
      traefik.http.routers.portainer-secure.tls: true
      traefik.http.routers.portainer-secure.tls.certresolver: cloudflare
      traefik.http.routers.portainer-secure.service: portainer
      traefik.http.services.portainer.loadbalancer.server.port: 9000

      traefik.http.routers.portainer-edge.entrypoints: http
      traefik.http.routers.portainer-edge.rule: Host(`portainer-edge.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}`)
      traefik.http.middlewares.portainer-edge-https-redirect.redirectscheme.scheme: https
      traefik.http.routers.portainer-edge.middlewares: portainer-edge-https-redirect
      traefik.http.routers.portainer-edge-secure.entrypoints: https
      traefik.http.routers.portainer-edge-secure.rule: Host(`portainer-edge.${TRAEFIK_BASE_DOMAIN:?TRAEFIK_BASE_DOMAIN is not set}`)
      traefik.http.routers.portainer-edge-secure.tls: true
      traefik.http.routers.portainer-edge-secure.tls.certresolver: cloudflare
      traefik.http.routers.portainer-edge-secure.service: portainer-edge
      traefik.http.services.portainer-edge.loadbalancer.server.port: 8000
    restart: unless-stopped
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-proxy
    privileged: false

volumes:
  portainer_data: {}
